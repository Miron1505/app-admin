{"version":3,"sources":["images/mobileApp.png","images/myApp.png","components/Navbar.js","components/Inicio.js","components/Login.js","components/Administrador.js","App.js","index.js"],"names":["Navbar","cookie","Cookies","history","useHistory","className","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","to","get","onClick","remove","push","indexImage","require","Inicio","src","default","alt","image","Login","useState","username","setUsername","password","setPassowrd","handleSubmit","e","a","preventDefault","fetch","api","method","headers","body","JSON","stringify","then","response","json","data","set","token","path","catch","err","Swal","fire","icon","text","timer","showConfirmButton","onSubmit","onChange","target","value","required","Admin","ordenes","setOrdenes","getOrders","res","handleDelete","title","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","cancelButtonText","result","isConfirmed","handleUpdate","useEffect","map","orden","user_id","fecha","direccion","estado","App","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41fa5028.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mobileApp.20f9fdd1.png\";","export default __webpack_public_path__ + \"static/media/myApp.b51bc8c2.png\";","import { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Cookies from \"universal-cookie/es6\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const Navbar = () => {\r\n\r\n    const cookie = new Cookies();\r\n    const history = useHistory();\r\n\r\n    const LogOut = () => {\r\n        cookie.remove('token');\r\n        history.push('/login');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\">Panel del Administrador</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/\">Inicio</Link>\r\n                            </li>\r\n                            { !cookie.get('token') &&\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" to=\"/login\">Login</Link>\r\n                                </li>\r\n                            }\r\n                            {\r\n                                cookie.get('token') &&\r\n                                <Fragment>\r\n                                    <li className=\"nav-item\">\r\n                                        <Link className=\"nav-link\" to=\"/admin\">Ordenes</Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <button className=\"btn btn-block btn-danger\" onClick={LogOut}>Cerrar Sesión</button>\r\n                                    </li>\r\n                                </Fragment>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}","const indexImage = require('../images/mobileApp.png');\r\n\r\nexport const Inicio = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <h3><strong>Interconectividad</strong></h3>\r\n                        <p className=\"text-break mt-3\">\r\n                            La noción, de uso frecuente en el terreno de la informática, se vincula a la comunicación entre dos o más redes. Gracias a la interconectividad, es posible compartir recursos, superar la limitación de los nodos y acceder de forma instantánea a las bases de datos que se encuentran compartidas.\r\n                        </p>\r\n                        <p className=\"text-break mt-3\">\r\n                            La interconectividad de redes es la capacidad de establecer conexiones internas y enlazar dos sistemas o dispositivos entre sí. \"Inter\" significa \"entre\" en inglés, y \"red” hace referencia a un conjunto de equipos informáticos que se conectan usando un medio para la transmisión de información.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <img className=\"img-fluid\" src={indexImage.default} alt=\"indexImage\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"universal-cookie/es6\";\r\nimport 'sweetalert2/dist/sweetalert2';\r\nimport Swal from \"sweetalert2\";\r\nconst image = require('../images/myApp.png');\r\n\r\nconst api = \"http://192.168.1.10:3030/api\";\r\n\r\nexport const Login = () => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassowrd] = useState('');\r\n\r\n    const cookie = new Cookies();\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = async (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        await fetch(api + '/signin', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type':  'application/json'},\r\n            body: JSON.stringify({\r\n                username,\r\n                password\r\n            })\r\n        }).then(async (response) => {\r\n            const data = await response.json();\r\n            cookie.set('token', data.token, {path: '/'});\r\n            history.push('/admin');\r\n        }).catch((err) => {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                text: 'Usuario o contraseña incorrectos',\r\n                timer: 1100,\r\n                showConfirmButton: false\r\n            })\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {cookie.get('token') && history.push('/')}\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <img className=\"img-fluid\" src={image.default} alt=\"loginImg\"/>\r\n                </div>\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"card border-secondary mb-3\">\r\n                            <div className=\"card-header\">Login</div>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"p-3\">\r\n                                    <form className=\"form-group\" onSubmit={handleSubmit}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12\">\r\n                                                <label className=\"mb-2\"><strong>Nombre de usuario</strong></label>\r\n                                                <input \r\n                                                    className=\"form-control\" \r\n                                                    type=\"text\" \r\n                                                    onChange={e => setUsername(e.target.value)} \r\n                                                    value={username} \r\n                                                    required\r\n                                                />\r\n                                                <div className=\"mb-3\"/>\r\n                                                <label className=\"mb-2\"><strong>Contraseña</strong></label>\r\n                                                <input \r\n                                                    className=\"form-control\" \r\n                                                    type=\"password\" \r\n                                                    onChange={e => setPassowrd(e.target.value)} \r\n                                                    value={password} \r\n                                                    required\r\n                                                />\r\n                                                <div className=\"mb-4\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-12 d-grid gap-2\">\r\n                                                <button className=\"btn btn-block btn-primary\">Iniciar Sesión</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import Cookies from \"universal-cookie/es6\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport 'sweetalert2';\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst api = \"http://192.168.1.10:3030/api\";\r\n\r\nexport const Admin = () => {\r\n\r\n    const cookie = new Cookies();\r\n    const history = useHistory();\r\n\r\n    const [ordenes, setOrdenes] = useState([]);\r\n\r\n    const getOrders = async () => {\r\n        const res = await fetch(api + '/order/all', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        const data = await res.json();\r\n        setOrdenes(data);\r\n    }\r\n\r\n    const handleDelete = async (id) => {\r\n        Swal.fire({\r\n            icon: \"warning\",\r\n            title: \"Eliminar orden?\",\r\n            text: \"Esto será irreversible.\",\r\n            showConfirmButton: true,\r\n            showCancelButton: true,\r\n            cancelButtonColor: 'gray',\r\n            confirmButtonColor: '#FF3333',\r\n            confirmButtonText: 'Eliminar',\r\n            cancelButtonText: 'Cancelar'\r\n        }).then(async (result) => {\r\n            if(result.isConfirmed)\r\n            {\r\n                await fetch(api + '/orden/delete/' + id, {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'access-token': cookie.get('token')\r\n                    }\r\n                }).then( async () => {\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Orden eliminada con éxito',\r\n                        showConfirmButton: false,\r\n                        timer: 1500\r\n                    });\r\n                    await getOrders();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleUpdate = async (id) => {\r\n        Swal.fire({\r\n            icon: \"info\",\r\n            title: \"Entregar orden?\",\r\n            showConfirmButton: true,\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Entregar orden',\r\n            cancelButtonText: 'Cancelar'\r\n        }).then(async (result) => {\r\n            if(result.isConfirmed)\r\n            {\r\n                await fetch(api + '/orden/update/' + id, {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'access-token': cookie.get('token')\r\n                    }\r\n                }).then( async () => {\r\n                    Swal.fire({\r\n                        icon: 'success',\r\n                        title: 'Orden entregada con éxito',\r\n                        showConfirmButton: false,\r\n                        timer: 1500\r\n                    });\r\n                    await getOrders();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOrders();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            { cookie.get('token') &&\r\n                <Fragment>\r\n                    <div className=\"mt-5\"/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-1\"/>\r\n                        <div className=\"col-md-9\">\r\n                            <table className=\"table table-stripped ml-5\">\r\n                                <thead>\r\n                                    <td>Id</td>\r\n                                    <td>Usurio</td>\r\n                                    <td>Orden</td>\r\n                                    <td>Fecha</td>\r\n                                    <td>Dirección</td>\r\n                                    <td>Estado</td>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {ordenes.map(orden => (\r\n                                        <Fragment>\r\n                                            <tr>\r\n                                                <td>{orden.id}</td>\r\n                                                <td>{orden.user_id}</td>\r\n                                                <td>{orden.orden}</td>\r\n                                                <td>{orden.fecha}</td>\r\n                                                <td>{orden.direccion}</td>\r\n                                                <td>{orden.estado}</td>\r\n                                                <td><button className=\"btn btn-info text-white\" onClick={() => handleUpdate(orden.id)}><strong>Entregar</strong></button></td>\r\n                                                <td><button className=\"btn btn-danger text-white\" onClick={() => handleDelete(orden.id)}><strong>Eliminar</strong></button></td>\r\n                                            </tr>\r\n                                        </Fragment>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            }\r\n            { !cookie.get('token') && history.push('/login') }\r\n        </div>\r\n    )\r\n}","import { Navbar } from \"./components/Navbar\";\nimport { BrowserRouter as Router, Switch , Route } from 'react-router-dom';\nimport { Inicio } from './components/Inicio';\nimport { Login } from './components/Login';\nimport { Admin } from './components/Administrador';\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar/>\n      <Switch>\n        <Route path=\"/\" exact={true} component={Inicio} />\n        <Route path=\"/admin\" exact={true} component={Admin} />\n        <Route path=\"/login\" exact={true} component={Login}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}